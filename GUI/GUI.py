from tkinter import *
from tkinter.ttk import *
import pyautogui
from tkinter import filedialog
from tkinter import messagebox
import socket

def Connect():
    try:
        s.connect((entIP.get(), PORT))
        messagebox.showinfo('', 'Connect successfully')
    except:
        messagebox.showinfo('', 'Error connecting to Sever.')
    pass

def ProcessRunning():
    request = 'ProcessRunning'
    #s.sendall(bytes(request, 'utf8'))
    root = Tk()

    def Kill():
        root2 = Tk()
        root2.title('Kill')
        id = Entry(root2)
        id.pack(side=LEFT)
        def start_kill():
            request = 'kill process'
            s.sendall(bytes(request, 'utf8'))
            s.sendall(bytes(id.get(), 'utf8'))
            id.delete(0, END)
        Button(root2, text = 'Kill', command=start_kill).pack(side=RIGHT)
        root2.mainloop()
        pass
    def Xem():

        pass
    def Xoa():
        pass
    def Start():
        
        pass
    Button(root, text='Kill', command=Kill).pack(side=LEFT)
    Button(root, text='Xem', command=Xem).pack(side=LEFT)
    Button(root, text='Start', command=Start).pack(side=RIGHT)
    Button(root, text='Xoa', command=Xoa).pack(side=RIGHT)
    root.mainloop()
    pass

def AppRunning():
    request = 'AppRunning'
    s.send(bytes(request))
    pass

def Shutdown():
    request = 'Shutdow'
    s.send(bytes(request))
    pass

def Screenshot():
    request = 'screenshot'
    #s.send(bytes(request))
    
    root = Tk()
    canvas1 = Canvas(root, width=300, height=300)
    canvas1.pack()

    myScreenshot = pyautogui.screenshot()

    def takeScreenshot():
        #s.send(bytes(request))
        data = s.recv(1024).decode()
        myScreenshot = data
        pass

    def saveScreenshot():
        file_path = filedialog.asksaveasfilename(defaultextension = '.png')
        myScreenshot.save(file_path)
        pass

    Button(root, text='TakeScreenshot', command=takeScreenshot).pack()
    Button(root, text='Save', command=saveScreenshot).pack()
    root.mainloop()
    pass

def KeyStroke():
    request = 'KeyStroke'
    s.send(bytes(request))
    pass

def FixRegistry():
    request = 'FixRegistry'
    s.send(bytes(request))
    pass

win = Tk()
win.title('Client')
#win.geometry('300x300')

HOST = '127.0.0.1'
PORT = 65432
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

for x in range(4):
    win.columnconfigure(x, pad=10)
    win.rowconfigure(x, pad=10)
Style().configure('TButton', padding=(2,10,2,10), font = 'serif 14')

entIP = Entry(win, font = 'Times 14 bold')
btnConnect = Button(win, text = 'Connect', command = Connect)
btnProcessRunning = Button(win, text = 'Process\nRunning',command=ProcessRunning)
btnAppRunning = Button(win, text = 'App Running',command=AppRunning)
btnShutdow = Button(win, text = 'Shut down',command=Shutdown)
btnScreenshot = Button(win, text = 'Screenshot',command=Screenshot)
btnKeyStroke = Button(win, text = 'Key\nStroke', command=KeyStroke)
btnFixRegistry = Button(win, text = 'Fix Registry', command = FixRegistry)
btnQuit = Button(win, text = 'Quit', command = win.destroy)

entIP.grid(row=0, column=0, columnspan=3, sticky=NW+SE)
btnConnect.grid(row = 0, column = 3, sticky=NW+SE)
btnProcessRunning.grid(row = 1, rowspan = 3, column = 0, sticky=NW+SE)
btnAppRunning.grid(row = 1, column = 1, columnspan = 2, sticky=NW+SE)
btnShutdow.grid(row = 2, column = 1, sticky=NW+SE)
btnScreenshot.grid(row = 2, column = 2, sticky=NW+SE)
btnKeyStroke.grid(row = 1, rowspan = 2, column = 3, sticky=NW+SE)
btnFixRegistry.grid(row = 3, column = 1, columnspan = 2, sticky=NW+SE)
btnQuit.grid(row = 3, column = 3, sticky=NW+SE)

win.mainloop()
s.close()